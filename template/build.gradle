buildscript {
  repositories {
    jcenter()
    mavenCentral()

    maven {
      url 'https://files.minecraftforge.net/maven'
    }
  }

  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
  }
}

apply plugin: 'net.minecraftforge.gradle'

version = '$TEMPLATE_MOD_VERSION'
group = '$TEMPLATE_GRADLE_GROUP'
archivesBaseName = '$TEMPLATE_MOD_JARS_NAME'

sourceCompatibility = targetCompatibility = 1.8

minecraft {
  mappings channel: 'snapshot', version: '20200330-1.15.1' // get new mappings at http://export.mcpbot.bspk.rs/

  // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // uncomment if you have an access transformer

  runs {
    client {
      workingDirectory = project.file('run')

      property 'forge.logging.markers', 'SCAN, REGISTRIES, REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      mods {
        $TEMPLATE_MODID {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory = project.file('run')

      property 'forge.logging.markers', 'SCAN, REGISTRIES, REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      mods {
        $TEMPLATE_MODID {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory = project.file('run')

      property 'forge.logging.markers', 'SCAN, REGISTRIES, REGISTRYDUMP'
      property 'forge.logging.console.level', 'debug'

      args '--mod', 'drl', '--all', '--output', file('src/generated/resources/')

      mods {
        $TEMPLATE_MODID {
          source sourceSets.main
        }
      }
    }
  }
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.15.2-31.1.30'
}

jar {
  manifest {
    attributes([
      "Specification-Title": '$TEMPLATE_MOD_TITLE',
      "Specification-Vendor": '$TEMPLATE_MOD_AUTHOR',
      "Specification-Version": "$project.version",
      "Implementation-Title": project.name,
      "Implementation-Version": "$project.version",
      "Implementation-Vendor": '$TEMPLATE_MOD_AUTHOR',
      "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}